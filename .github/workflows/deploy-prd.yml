name: Deploy production

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    # 15 minutes timeout
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: Config
        id: config
        run: |
          echo "branch=main" >> $GITHUB_ENV
          echo "commit_hash=${{ github.sha }}" >> $GITHUB_ENV
          echo "project_name=subscan-ui-next" >> $GITHUB_ENV
          echo "environment=production" >> $GITHUB_ENV
          echo "CLOUDFLARE_API_TOKEN=${{ secrets.CF_PAGES_TOKEN }}" >> $GITHUB_ENV
          echo "CLOUDFLARE_ACCOUNT_ID=${{ secrets.CF_PAGES_ACCOUNT_ID }}" >> $GITHUB_ENV

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Build
        run: npm install && npx @cloudflare/next-on-pages@1.0.0 --experimental-minify

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@46e7ceca563e8b08ce905485527ee4c74e535886
        id: deploy-pages
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.project_name }}
          directory: ./.vercel/output/static
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.branch }}
          wranglerVersion: 3.0.0

      - name: check pages deployment status
        run: |
          sleep 10
          result=$(curl -X GET \
             https://api.cloudflare.com/client/v4/accounts/${{ env.CLOUDFLARE_ACCOUNT_ID }}/pages/projects/${{ env.project_name }}/deployments \
             -H 'Accept: application/json' \
             -H 'Authorization: Bearer ${{ env.CLOUDFLARE_API_TOKEN }}')
          status=$(echo $result | jq '.result[] | select(.url == "${{ steps.deploy-pages.outputs.url }}").latest_stage.status')
          echo "deployment status: $status"
          echo $status | grep -q 'success' || exit 1

      - uses: 8398a7/action-slack@v3
        if: failure()
        with:
          status: ${{ job.status }}
          fields: repo,author,eventName,workflow,ref,commit
          channel: ${{ secrets.SLACK_CHANNEL_ID }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}

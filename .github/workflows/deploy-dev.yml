name: Deploy develop

on:
  pull_request:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
      deployments: write

    # 15 minutes timeout
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: Config
        id: config
        run: |
          echo "branch=preview" >> $GITHUB_ENV
          echo "commit_hash=${{ github.sha }}" >> $GITHUB_ENV
          echo "project_name=subscan-ui-next" >> $GITHUB_ENV
          echo "environment=preview" >> $GITHUB_ENV
          echo "CLOUDFLARE_API_TOKEN=${{ secrets.CF_PAGES_TOKEN }}" >> $GITHUB_ENV
          echo "CLOUDFLARE_ACCOUNT_ID=${{ secrets.CF_PAGES_ACCOUNT_ID }}" >> $GITHUB_ENV

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Build
        run: npm install && npx @cloudflare/next-on-pages@0.0.0-4740c02 --experimental-minify

      - name: Push to Cloudflare Pages
        run: |
          npm i -g wrangler@2.16.0
          wrangler pages publish .vercel/output/static --project-name=${{ env.project_name }}  --branch=${{ env.branch }} | tee ./out.log
          echo "CF_PAGES_URL=$(cat ./out.log | grep -o 'https://.*.pages.dev')" >> $GITHUB_ENV
        env:
          CLOUDFLARE_API_TOKEN: ${{ env.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          PROJECT_NAME: ${{ env.project_name }}

      - name: check pages deployment status
        run: |
          sleep 10
          result=$(curl -X GET \
             https://api.cloudflare.com/client/v4/accounts/${{ env.CLOUDFLARE_ACCOUNT_ID }}/pages/projects/${{ env.project_name }}/deployments \
             -H 'Accept: application/json' \
             -H 'Authorization: Bearer ${{ env.CLOUDFLARE_API_TOKEN }}')
          status=$(echo $result | jq '.result[] | select(.url == "${{ env.CF_PAGES_URL }}").latest_stage.status')
          echo "deployment status: $status"
          echo $status | grep -q 'success' || exit 1

      - uses: marocchino/sticky-pull-request-comment@v2
        if: failure() == false
        with:
          append: true
          message: ${{ env.CF_PAGES_URL }}

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: failure() == false
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://avatars.githubusercontent.com/u/14985020?s=48&v=4
          SLACK_MESSAGE: "${{ env.CF_PAGES_URL }}"
          SLACK_TITLE: Preview
          SLACK_USERNAME: Pages
          SLACK_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}

      - uses: 8398a7/action-slack@v3
        if: failure()
        with:
          status: ${{ job.status }}
          fields: repo,author,eventName,workflow,ref,commit
          channel: ${{ secrets.SLACK_CHANNEL_ID }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}
